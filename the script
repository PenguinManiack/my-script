--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then v23=nil;function v23()local v38=0;local v39;local v40;local v41;local v42;while true do if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v15,v18,v18 + 3 + 0);v18=v18 + 4;v38=1 + 0 + 0;end if (v38==(1633 -(668 + 964))) then return (v42 * (48140910 -31363694)) + (v41 * (65556 -((32 -22) + 10))) + (v40 * (1299 -(1017 + 26))) + v39;end end end v24=nil;v17=4;end if (v17==7) then function v29(v30,v31,v32)local v43=v30[1];local v44=v30[2];local v45=v30[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v11("#",...) -1;local function v68()local v72=v43;local v73=Const;local v74=v44;local v75=v45;local v76=v27;local v77={};local v78={};local v79={};for v85=(1388 -(162 + 19)) -(13 + 22 + 1172),v67 do if ((v85>=v75) or ((4348 -(1444 + 175))==(3050 -(119 + 806)))) then v77[v85-v75]=v66[v85 + (2 -1)];else v79[v85]=v66[v85 + (1 -0)];end end local v80=(v67-v75) + 1;local v81;local v82;while true do local v86=0 + 0;local v87;while true do if (((1515 -(486 + 638))==((3395 -2083) -(337 + 584))) and (0==v86)) then v87=0 + 0;while true do if (((396 -193)<(2995 + 18)) and (v87==(0 + 0))) then local v93=0 + 0;while true do if (((11227 -7946)<((933 + 4911) -(401 + 1434))) and (v93==(1 + 0))) then v87=1;break;end if ((((14262 -8979) -3656)>=197) and (v93==(81 -(25 + 56)))) then v81=v72[v64];v82=v81[919 -(861 + (110 -53))];v93=1;end end end if ((v87==(1355 -(233 + 1121))) or ((3980 -(61 + 230))<=(6678 -(1806 + 1402)))) then if (((4498 -(41 + 94))>=646) and (v82<=14)) then if ((v82<=(1044 -(625 + 413))) or (2998>(5471 -(970 + 861)))) then if ((1389<(4322 -(557 + 1015))) and (v82<=(86 -((191 -128) + 21)))) then if ((1842<3909) and (v82<=0)) then local v107=0;local v108;local v109;while true do if (((1311 -(89 + 8))<4296) and (v107==(0 + 0))) then local v167=(0 + 0) -0;while true do if (((10925 -7682)==(7351 -4108)) and (v167==(0 + 0))) then v108=0;v109=nil;v167=1644 -(1562 + 81);end if (((2985 -2316)<(2772 -1576)) and (1==v167)) then v107=(4402 -2475) -(1762 + 164);break;end end end if ((v107==(1 -0)) or ((4347 -(1182 + 144))>=(2795 + 2192))) then while true do if (((5702 -(856 + 141))==(17202 -12497)) and (v108==0)) then v109=v79[v81[4]];if ((3689>(2902 + (308 -(22 + 83)))) and  not v109) then InstrPoint=InstrPoint + (1826 -(145 + 1680));else local v173=0 -0;local v174;while true do if ((((1460 -856) -302)==(524 -(118 + (1098 -(267 + 727))))) and (0==v173)) then v174=(7 + 724) -((825 -339) + (1073 -(137 + 691)));while true do if ((v174==(0 -0)) or ((12470 -7595)==(1073 + 423))) then v79[v81[1 + 1]]=v109;InstrPoint=v81[3];break;end end break;end end end break;end end break;end end elseif ((v82>(2 -1)) or ((4478 -(566 + 916))>=(4073 -(13 + 280)))) then v32[v81[2 + 1]]=v79[v81[1510 -(377 + 357 + 774)]];else local v116=1764 -(948 + 816);local v117;local v118;while true do if ((((10593 -4249) -3638)==(1592 + 1114)) and (v116==(1 + 0))) then while true do if ((v117==(0 + 0)) or ((3340 + (1673 -(1068 + 112)))==(2020 -((3005 -1428) + 383)))) then v118=v81[(1250 + 234) -(683 + 387 + 412)];v79[v118](v12(v79,v118 + (1 -0),v81[2 + 1 + 0]));break;end end break;end if (((0 -0)==v116) or ((6285 -1646)<=(33 -19))) then v117=1253 -(131 + 1122);v118=nil;v116=1 + 0;end end end elseif ((307==307) and (v82<=(1644 -(636 + 1004)))) then if ((v82>(1 + 2 + 0)) or (1985<(985 -737))) then v79[v81[2 -0]]=v81[994 -(691 + 300)]~=(0 -0);else v31[v81[3]]=v79[v81[1392 -(279 + 1111)]];end elseif (((6471 -3206)<(4218 + 622)) and (v82>(4 + 1))) then local v121=0 + 0;local v122;local v123;local v124;local v125;local v126;while true do if ((v121==(1 -0)) or ((126 + 273)<=(664 -500))) then v124=nil;v125=nil;v121=1 + 1;end if (((2981 -(1603 + 311))>(1037 -(199 + 687))) and (v121==(0 -0))) then v122=0 + 0;v123=nil;v121=1 + 0;end if (((1951 + 1271)<=(5424 -(475 + 782))) and (v121==(1843 -(454 + 1387)))) then v126=nil;while true do if ((v122==(110 -(34 + 75))) or ((3420 -(256 + 264))<=1163)) then local v175=0 + 0;while true do if ((v175==(0 + 0)) or (4111<(2220 -1555))) then v65=(v125 + v123) -(1 -0);v126=0 -0;v175=957 -(85 + 871);end if (((2269 + 1084)>=(1600 + 449)) and ((1 + 0 + 0)==v175)) then v122=548 -(415 + 131);break;end end end if (((529 + 1043)<1994) and (v122==2)) then for v191=v123,v65 do local v192=0;local v193;local v194;while true do if ((v192==(2 -1)) or (1034>(382 + 1710))) then while true do if (((3724 -2678)<2326) and (0==v193)) then v194=0 + 0;while true do if (((42 + 2606)>(379 + 134)) and ((240 -(89 + 151))==v194)) then v126=v126 + (2 -1);v79[v191]=v124[v126];break;end end break;end end break;end if (((6023 -(10791 -6659))<(7587 -3650)) and (v192==(0 + 0))) then v193=0 -(0 -0);v194=nil;v192=1;end end end break;end if (((2842 + 141)==(4136 -(681 + 472))) and (v122==(0 -0))) then local v176=0;while true do if (((7459 -(8124 -3815))==(2329 + (1419 -(524 + 74)))) and (v176==(969 -(164 + 804)))) then v122=2 -1;break;end if (((0 + 0)==v176) or ((1076 + 1385)<(1202 -(785 + 61)))) then v123=v81[1 + 1];v124,v125=v76(v79[v123](v79[v123 + 1 + 0]));v176=1 + 0;end end end end break;end end else v79[v81[5 -3]][v81[362 -(110 + 131 + (1198 -(33 + 1047)))]]=v79[v81[42 -((614 -(350 + 228)) + 2)]];end elseif ((v82<=(38 -28)) or ((6607 -2015)<=(1823 + 2664))) then if ((v82<=(5 + 3)) or ((3785 -((2195 -(82 + 1464)) + 176))==(935 + 608))) then if (((4319 -(118 + 29))>1837) and (v82>7)) then for v168=v81[1554 -(182 + 1370)],v81[(694 -380) -(14 + 4 + (382 -(20 + 69)))] do v79[v168]=nil;end else v79[v81[1216 -((562 -293) + (2185 -1240))]]=v29(v74[v81[3]],nil,v32);end elseif ((v82==9) or ((5415 -(1765 + 77))==(885 -(86 + 251)))) then v79[v81[2]]=v79[v81[3]][v79[v81[4]]];else v79[v81[1991 -(759 + 1230)]]=v79[v81[1204 -(320 + 881)]][v81[3 + 1]];end elseif ((v82<=(50 -38)) or ((5010 -2260)>(5225 -(555 + 582)))) then if ((2967<=(3700 -((1635 -(519 + 585)) + 117))) and (v82>(13 -2))) then local v131=0;local v132;local v133;local v134;local v135;while true do if ((231<(2735 -1040)) and (v131==(1 + 0))) then v134=nil;v135=nil;v131=1 + 1;end if ((v131==2) or ((2094 -(2098 -1031))==1770)) then while true do if ((3284>=(693 -431)) and (v132==(1 + 1))) then for v195=1 + 0,v81[4 + 0 + 0] do local v196=0 -0;local v197;local v198;while true do if ((v196==(0 -0)) or ((8003 -6044)==(155 + 1576))) then v197=421 -(222 + 199);v198=nil;v196=1;end if ((v196==(1 + 0)) or ((3220 + 1533)<(441 + 1383))) then while true do if (((1851 -(1590 + 28))==233) and (((0 -0) -0)==v197)) then v64=v64 + (951 -(688 + 262));v198=v72[v64];v197=688 -(31 + 456 + 200);end if (((9726 -5236)>(17 -3)) and (v197==(329 -((1054 -(55 + 885)) + 214)))) then if (((1708 -(1356 + 312))<=(8321 -(3114 + 1965))) and (v198[1 + 0]==(41 -21))) then v135[v195-(1 + 0)]={v79,v198[1 + 2 + 0]};else v135[v195-(1 -0)]={v31,v198[289 -(113 + 173)]};end v78[ #v78 + (73 -((81 -50) + (80 -39)))]=v135;break;end end break;end end end v79[v81[862 -(455 + 405)]]=v29(v133,v134,v32);break;end if ((v132==0) or (4054<=(3133 -(278 + 106)))) then local v178=1149 -((1194 -(203 + 13)) + 171);while true do if ((1309<(2799 + (3283 -(202 + 1439)))) and (v178==(0 -0))) then v133=v74[v81[6 -(5 -2)]];v134=nil;v178=1;end if ((v178==(1 + 0)) or (287>(696 -(318 + 48)))) then v132=146 -(53 + 92);break;end end end if (((4718 -(393 + 622))>(3521 -(152 + 19))) and (v132==(1699 -(834 + 864)))) then local v179=0 -0;while true do if ((v179==1) or ((1751 + 113)<=(897 + 548))) then v132=2;break;end if (((10615 -(8287 -(287 + 298)))>191) and (v179==(0 -0))) then v135={};v134=v9({},{__index=function(v205,v206)local v211=0 -0;local v212;local v213;while true do if (((2983 -(1844 + 517))<(3164 -(603 + 426))) and (v211==(306 -(98 + 208)))) then v212=0 + 0;v213=nil;v211=1 + 0;end if ((v211==(1 + 0)) or (((2125 + 921) -(88 + (1460 -(858 + 385))))==(2461 -631))) then while true do if ((v212==(724 -(248 + (2339 -1863)))) or ((1491 + 1734)<(1404 -798))) then local v226=0 + 0;while true do if (((574 -(206 + 19))==((902 -346) -207)) and (v226==((694 + 1087) -(959 + 822)))) then v213=v135[v206];return v213[1 + 0][v213[1843 -(386 + 1455)]];end end end end break;end end end,__newindex=function(v207,v208,v209)local v214=0 + (27 -(17 + 10));local v215;local v216;while true do if ((v214==(1 + 0)) or ((3044 -1802)==892)) then while true do if (((4515 -(371 + 310 + 669))>=(1864 + 23)) and (v215==0)) then v216=v135[v208];v216[3 -2][v216[2]]=v209;break;end end break;end if (((3544 -1259)<=3113) and (((0 -0) -0)==v214)) then local v220=0 + 0;while true do if (((4948 -(621 + 269))>=(1188 + (3308 -(823 + 487)))) and (v220==((2109 -1545) -(505 + 59)))) then v215=572 -(76 + 496);v216=nil;v220=1 -0;end if ((4595>(3571 -2225)) and (v220==((188 + 509) -(23 + 673)))) then v214=1994 -(320 + 1673);break;end end end end end});v179=1;end end end end break;end if ((v131==(0 -0)) or (1024>(486 + 1065))) then v132=0 + 0;v133=nil;v131=1734 -(1729 + 4);end end else v79[v81[4 -2]]=v81[1 + 2];end elseif ((v82==(314 -(156 + 145))) or ((5629 -(1065 + 129))==(11655 -6720))) then v79[v81[6 -4]][v81[3 + 0]]=v81[8 -4];else local v138=0 + 0;local v139;local v140;local v141;local v142;while true do if ((v138==(2 + 0)) or ((11409 -7287)<=(173 + 107 + 45))) then while true do if (((3162 -(854 + 424))<4898) and (v139==(0 -0))) then v140=1643 -(1452 + 191);v141=nil;v139=2 -1;end if (((2064 + 750)<=(11662 -6790)) and (1==v139)) then v142=nil;while true do if ((v140==0) or ((7765 -3046)<=((3723 -2054) -(570 + 55)))) then local v201=0;local v202;while true do if ((v201==(0 + 0)) or (282==(508 + 2677))) then v202=1825 -(708 + 1117);while true do if (((6905 -(796 + 4193))>1642) and ((0 + 0)==v202)) then v141=v81[7 -(1963 -(866 + 1092))];v142=v79[v81[9 -6]];v202=(2 + 0) -1;end if ((v202==(1 -0)) or ((4260 -(811 + 836))==1148)) then v140=1;break;end end break;end end end if (((3255 -((631 -(152 + 104)) + 172))>=1622) and (v140==(3 -2))) then v79[v141 + (1612 -(1449 + 162))]=v142;v79[v141]=v142[v81[7 -3]];break;end end break;end end break;end if (((1943 + 2853)>2745) and (v138==(363 -(49 + 314)))) then v139=0;v140=nil;v138=1;end if ((v138==(1 -0)) or ((1519 + 928)>=(2470 + 738))) then v141=nil;v142=nil;v138=(5 + 2) -5;end end end elseif ((v82<=21) or (((399 + 4305) -1625)>=(5798 -(1175 + 422)))) then if ((v82<=(37 -20)) or ((888 + 303)==(16654 -11679))) then if ((v82<=(48 -33)) or ((241 + 24)>=(4373 -2839))) then if ((v79[v81[1237 -(95 + 325 + 815)]]==v81[939 -(752 + 183)]) or ((561 + 1447)>=(3805 + 237))) then v64=v64 + 1;else v64=v81[2 + (525 -(295 + 229))];end elseif ((v82==((5095 -3763) -(65 + 1251))) or ((7641 -4788)>(5876 -1856))) then local v143=0 -0;local v144;local v145;local v146;while true do if ((v143==(0 -0)) or ((2260 -((967 -(192 + 432)) + 1650))==(3661 + 189))) then v144=84 -(79 + 5);v145=nil;v143=4 -(13 -10);end if ((3320>(2870 + 44)) and (v143==(1 -(0 + 0)))) then v146=nil;while true do if ((v144==(2 -(1 + 0))) or ((17639 -13870)==(167 + (1057 -661)))) then while true do if (((836 + 234)<(2060 -(106 + 432))) and (v145==(0 + 0))) then v146=v81[1785 -(664 + 1119)];v79[v146](v12(v79,v146 + (4 -3),v65));break;end end break;end if ((v144==0) or (355>(6453 -(12008 -8258)))) then local v180=351 -(225 + (421 -295));while true do if ((v180==(0 -0)) or ((1876 + 2745)<(491 + 2264))) then v145=0 + 0;v146=nil;v180=2 -(835 -(197 + 637));end if ((v180==1) or ((3428 -(673 + 136))==2654)) then v144=(2507 -2003) -(409 + 94);break;end end end end break;end end else v79[v81[2 + 0]]=v31[v81[5 -(8 -6)]];end elseif ((1512==(2881 -1369)) and (v82<=(15 + (15 -11)))) then if ((v82==(1624 -(899 + 707))) or ((3268 + 170)<(11326 -7954))) then local v148=1262 -(1249 + 13);local v149;while true do if ((v148==0) or (4964<(3148 + 591))) then v149=v81[2 + 0];v79[v149]=v79[v149](v12(v79,v149 + (2 -1),v65));break;end end else v64=v81[5 -2];end elseif ((v82==(56 -36)) or ((1836 -(103 + (2009 -1208)))<=((1400 -(265 + 1041)) + 830))) then v79[v81[1309 -(348 + 959)]]=v79[v81[3]];else v79[v81[1 + 1]]();end elseif ((1041>(672 -(224 + 120))) and (v82<=(55 -(24 + 6)))) then if ((((9371 -4728) -(800 + 1053))>(524 + 732)) and (v82<=(36 -13))) then if ((v82==(101 -79)) or ((1957 + 1222)==(212 + 171))) then local v151=0 + 0;local v152;local v153;while true do if ((v151==((2 -1) + 0)) or (4047<=(1609 + 75))) then while true do if (((0 + 0)==v152) or (4256<(838 -(68 + 139)))) then v153=v81[4 -2];v79[v153]=v79[v153](v12(v79,v153 + (868 -((1141 -(984 + 98)) + 808)),v81[3]));break;end end break;end if (((2555 -(220 + 225))<=(5651 -1723)) and (v151==(0 -0))) then v152=0;v153=nil;v151=1;end end else do return;end end elseif ((v82==24) or (3731<=((3884 -(489 + 578)) -895))) then if (((11352 -7854)>1047) and (v81[286 -(151 + 133)]==v79[v81[3 + 1]])) then v64=v64 + (1 -0);else v64=v81[641 -(267 + 371)];end elseif ( not v79[v81[2 -0]] or ((4821 -(247 + 1427))>4706)) then v64=v64 + (1865 -(750 + (4097 -2983)));else v64=v81[5 -2];end elseif ((((1479 -(294 + 1121)) + 2787)>(3082 -(394 + 145))) and (v82<=27)) then if ((v82>(128 -102)) or ((873 + 2489)<805)) then local v154=1681 -(213 + 173 + 1295);local v155;local v156;while true do if ((v154==(0 + 0)) or ((5711 -(549 + 580))<(4877 -(327 + 523)))) then v155=0 -0;v156=nil;v154=1151 -(531 + 619);end if ((((6034 -(1269 + 723)) -(326 + 1740))<=(2484 + 1997)) and (v154==(1 + 0))) then while true do if (((5353 -(753 + 56))>=(4762 -1927)) and (v155==(1754 -(1659 + 95)))) then v156=v81[2 + 0];v79[v156](v79[v156 + (2 -1)]);break;end end break;end end else local v157=0;local v158;local v159;local v160;local v161;local v162;while true do if ((v157==((2 -1) + 0)) or ((703 -299)>(3545 -(160 + 436)))) then v160=nil;v161=nil;v157=1357 -(202 + 1153);end if (((504 + (4391 -1596))>=(1812 -1179)) and (v157==2)) then v162=nil;while true do if ((v158==0) or ((784 -578)<(769 -(474 + 263)))) then local v182=0;while true do if (((6911 -3733)>=((234 -66) + (954 -405))) and (v182==(1963 -(1365 + 598)))) then v159=v81[2 + 0];v160,v161=v76(v79[v159](v12(v79,v159 + (1 -0),v81[8 -5])));v182=1 -0;end if ((1==v182) or ((5271 -(592 + 1287))==(7762 -3093))) then v158=1;break;end end end if ((4324==(6119 -(81 + 115 + 1599))) and (v158==(1 + 0))) then local v183=0;while true do if ((v183==0) or ((1646 + 406)<(2698 -1388))) then v65=(v161 + v159) -(192 -(104 + 87));v162=0 -0;v183=(2 -1) + 0;end if ((v183==1) or ((4746 -(268 + 103))>=(646 + 4273))) then v158=216 -(147 + 67);break;end end end if ((v158==(1 + 1)) or ((1666 + 1942)>((8392 -(386 + 259)) -4117))) then for v199=v159,v65 do local v200=1630 -(1045 + 585);while true do if (((4713 -(634 + 315 + 25))<(13510 -9763)) and (v200==(1078 -(768 + 310)))) then v162=v162 + 1;v79[v199]=v160[v162];break;end end end break;end end break;end if ((v157==(0 + 0)) or (((50 -32) + 1223)>(4179 -1406))) then v158=0 + 0;v159=nil;v157=1 + 0;end end end elseif ((v82==(28 + 0)) or ((4103 + 463)<(14617 -(8242 + 2490)))) then v79[v81[1128 -(840 + 286)]]=v32[v81[1757 -(48 + 1706)]];else local v164=0;local v165;local v166;while true do if ((((977 + 7120) -6297)<=(3096 -1051)) and (v164==0)) then v165=0 -0;v166=nil;v164=(810 -504) -(124 + 181);end if (((6655 -(1151 + 725))>((364 + 3564) -(921 + 820))) and ((2 -1)==v164)) then while true do if (((3632 -2473)<(2779 + 2133)) and (v165==(0 + 0))) then v166=v81[(1712 -(1123 + 587)) + 0];v79[v166]=v79[v166]();break;end end break;end end end v64=v64 + 1 + 0;break;end end break;end end end end A,B=v27(v10(v68));if  not A[1] then local v83=v30[4][v64] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (v17==2) then function v21()local v46=v1(v15,v18,v18);v18=v18 + 1;return v46;end v22=nil;function v22()local v47,v48=v1(v15,v18,v18 + 2 + 0);v18=v18 + (950 -(252 + 696));return (v48 * 256) + v47;end v17=3;end if (v17==1) then v20=nil;function v20(v33,v34,v35)if v35 then local v69=(v33/((1525 -(833 + 690))^(v34-(1 + 0))))%((2 + 0)^(((v35-1) -(v34-(1 + 0))) + 1));return v69-(v69%((42 + 1415) -(1261 + 195)));else local v70=(1 + 1)^(v34-(1645 -(1620 + 24)));return (((v33%(v70 + v70))>=v70) and (309 -(77 + 231))) or (0 -0);end end v21=nil;v17=2;end if (6==v17) then v28=nil;function v28()local v49=297 -(24 + 273);local v50;local v51;local v52;local v53;local v54;local v55;while true do local v60=0 + 0;local v61;while true do if (v60==0) then v61=0 + 0;while true do if ((1716 -(321 + 1394))==v61) then if (v49==(1 + 0)) then local v90=337 -(91 + 246);local v91;while true do if (v90==0) then v91=0;while true do if (v91~=(0 -0)) then else v54=v23();v55={};v91=1 + 0;end if (v91~=1) then else local v96=1155 -(647 + 508);while true do if ((1 + 0)==v96) then v91=1468 -(264 + 1202);break;end if (0==v96) then for v110=1,v54 do local v111=0 -0;local v112;local v113;while true do if (v111==0) then local v170=174 -(6 + 168);while true do if (v170~=(1 -0)) then else v111=1 -0;break;end if (v170==0) then v112=v21();v113=nil;v170=1 + 0;end end end if ((1023 -(281 + 741))~=v111) then else if (v112==1) then v113=v21()~=(0 + 0);elseif (v112==(4 -2)) then v113=v24();elseif (v112~=(11 -8)) then else v113=v25();end v55[v110]=v113;break;end end end v53[225 -(114 + 108)]=v21();v96=1 + 0;end end end if (v91~=(994 -(860 + 132))) then else v49=29 -(13 + 14);break;end end break;end end end break;end if ((884 -(368 + 516))==v61) then if (v49~=2) then else local v92=471 -(264 + 207);while true do if (v92~=(1 + 0)) then else local v94=0 -0;while true do if (0==v94) then for v97=1,v23() do v52[v97]=v23();end return v53;end end end if (0==v92) then local v95=1625 -(1512 + 113);while true do if (v95==(2 -1)) then v92=3 -2;break;end if (v95==(0 + 0)) then for v99=1665 -(369 + 1295),v23() do local v100=0 + 0;local v101;local v102;local v103;while true do if (v100~=(4 -3)) then else v103=nil;while true do if (v101==(543 -(214 + 328))) then while true do if (v102~=(0 -0)) then else v103=v21();if (v20(v103,1 + 0,1)~=(0 -0)) then else local v185=0 -0;local v186;local v187;local v188;local v189;local v190;while true do if (v185==(1355 -(1198 + 156))) then v188=nil;v189=nil;v185=1920 -(1803 + 115);end if (v185~=(2 + 0)) then else v190=nil;while true do if (v186==(0 + 0)) then local v218=0;while true do if (v218==1) then v186=1;break;end if (v218~=(0 -0)) then else v187=0 + 0;v188=nil;v218=1 + 0;end end end if (v186~=(2 + 0)) then else while true do if (v187~=(0 -0)) then else local v223=260 -(136 + 124);while true do if (v223==(1 + 0)) then v187=1 + 0;break;end if (v223==(685 -(348 + 337))) then v188=v20(v103,4 -2,1496 -(986 + 507));v189=v20(v103,4,1 + 5);v223=1 + 0;end end end if ((3 + 0)==v187) then if (v20(v189,3,1396 -(754 + 639))==(943 -(614 + 328))) then v190[4]=v55[v190[1 + 3]];end v50[v99]=v190;break;end if (v187~=(1 + 1)) then else if (v20(v189,1,4 -3)~=(231 -(169 + 61))) then else v190[5 -3]=v55[v190[2]];end if (v20(v189,1 + 1,332 -(166 + 164))~=(2 -1)) then else v190[2 + 1]=v55[v190[3 + 0]];end v187=1351 -(776 + 572);end if (v187==(1 -0)) then v190={v22(),v22(),nil,nil};if (v188==(1673 -(882 + 791))) then local v231=329 -(116 + 213);local v232;while true do if (v231==(902 -(442 + 460))) then v232=0 + 0;while true do if (v232~=0) then else v190[9 -6]=v22();v190[354 -(112 + 238)]=v22();break;end end break;end end elseif (v188==(1 -0)) then v190[3]=v23();elseif (v188==(1043 -(526 + 515))) then v190[3]=v23() -((2 -0)^(1263 -(960 + 287)));elseif (v188==3) then local v237=0 -0;local v238;while true do if (v237~=(0 + 0)) then else v238=0 + 0;while true do if (v238==(970 -(97 + 873))) then v190[1 + 2]=v23() -(2^(3 + 13));v190[6 -2]=v22();break;end end break;end end end v187=4 -2;end end break;end if (v186~=(1 -0)) then else v189=nil;v190=nil;v186=2 + 0;end end break;end if (v185==0) then v186=0 + 0;v187=nil;v185=2 -1;end end end break;end end break;end if ((0 + 0)~=v101) then else v102=0;v103=nil;v101=480 -(454 + 25);end end break;end if (v100==0) then local v114=0 + 0;while true do if (v114~=(751 -(147 + 603))) then else v100=1255 -(300 + 954);break;end if ((0 + 0)~=v114) then else v101=0;v102=nil;v114=1;end end end end end for v104=1 -0,v23() do v51[v104-(2 -1)]=v28();end v95=1;end end end end end if (v49~=0) then else v50={};v51={};v52={};v53={v50,v51,nil,v52};v49=4 -3;end v61=3 -2;end end break;end end end end v29=nil;v17=7;end if (v17==4) then function v24()local v56=v23();local v57=v23();return (( -(1518 -(1031 + 408 + 77)) * v20(v57,31 + (381 -(242 + 138)))) + (534 -(525 + 8))) * ((3 -1)^(v20(v57,1210 -(1063 + 126),12 + 19) -(2473 -(482 + 968)))) * ((((v20(v57,1,5 + 15) * ((3 -1)^(621 -(367 + (337 -115))))) + v56)/((1562 -(13 + 1547))^(2 + 50))) + (4 -3));end v25=nil;function v25(v36)local v58;if  not v36 then v36=v23();if (v36==(0 + 0)) then return "";end end v58=v3(v15,v18,(v18 + v36) -(1 + 0));v18=v18 + v36;local v59={};for v62=895 -(213 + 681), #v58 do v59[v62]=v2(v1(v3(v58,v62,v62)));end return v6(v59);end v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v71=v2(v0(v37,16));if v19 then local v84=v5(v71,v19);v19=nil;return v84;else return v71;end end end);v17=1;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end end end vv8());end
