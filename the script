--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v61=v2(v0(v29,16));if v18 then local v74=0;local v75;while true do if (v74==1) then return v75;end if (0==v74) then v75=v5(v61,v18);v18=nil;v74=1;end end else return v61;end end end);local function v19(v30,v31,v32)if v32 then local v62=(1223 -(422 + 801)) -0;local v63;while true do if (v62==0) then v63=(v30/((2 -0)^(v31-(168 -(47 + 120)))))%(((13 -7) -4)^(((v32-(1 + (1293 -(384 + 909)))) -(v31-(4 -(1636 -(157 + 1476))))) + 1));return v63-(v63%(3 -2));end end else local v64=(940 + 182) -(790 + 332);local v65;while true do if (v64==(0 + 0)) then v65=(1592 -(772 + 818))^(v31-1);return (((v30%(v65 + v65))>=v65) and (3 -2)) or (0 -(0 + 0));end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + 1 + 1);v17=v17 + 2 + 0;return (v39 * (390 -134)) + v38;end local function v22()local v40,v41,v42,v43=v1(v15,v17,v17 + (14 -11));v17=v17 + (11 -7);return (v43 * (25867139 -9089923)) + (v42 * (231409 -165873)) + (v41 * 256) + v40;end local function v23()local v44=v22();local v45=v22();return (( -((2001 -(48 + 162)) -(112 + 1677)) * v19(v45,360 -(198 + 130))) + 1) * ((1210 -(128 + 1080))^(v19(v45,1776 -(8 + 1747),22 + 9) -(2891 -(1211 + 657)))) * ((((v19(v45,(2 + 0) -1,20) * (2^(728 -(117 + 579)))) + v44)/(((550 + 383) -(927 + 4))^(409 -(153 + 204)))) + 1 + 0);end local function v24(v33)local v46;if  not v33 then v33=v22();if (v33==(0 -0)) then return "";end end v46=v3(v15,v17,(v17 + v33) -1);v17=v17 + v33;local v47={};for v59=1 + 0, #v46 do v47[v59]=v2(v1(v3(v46,v59,v59)));end return v6(v47);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;local v55;while true do if (v48~=(9 -6)) then else v55=nil;while true do local v76=0;while true do if (v76==1) then if (0==v49) then local v94=0 -0;local v95;local v96;while true do if (v94==(1 + 0)) then while true do if (v95==(0 + 0)) then v96=0 -0;while true do if (v96==(0 + 0)) then local v105=0 + 0;local v106;while true do if (v105==0) then v106=0 -0;while true do if ((0 -0)~=v106) then else local v121=0;while true do if (v121==(0 -0)) then v50={};v51={};v121=1104 -(293 + 810);end if (v121==1) then v106=1;break;end end end if ((1518 -(859 + 658))==v106) then v96=1 -0;break;end end break;end end end if (v96==(877 -(267 + 608))) then v49=1 + 0;break;end if (1==v96) then local v107=0;local v108;while true do if (v107==(0 -0)) then v108=1558 -(830 + 728);while true do if (v108==(1749 -(811 + 938))) then v52={};v53={v50,v51,nil,v52};v108=492 -(276 + 215);end if (v108==1) then v96=2;break;end end break;end end end end break;end end break;end if (v94==(1113 -(157 + 956))) then v95=0;v96=nil;v94=2 -1;end end end break;end if (v76==(0 -0)) then local v77=0 + 0;while true do if (v77~=1) then else v76=1;break;end if (v77==(0 -0)) then local v97=0;while true do if (v97~=1) then else v77=1 -0;break;end if (0~=v97) then else if (v49==(1727 -(1711 + 15))) then local v100=0;while true do if (v100~=(2 -1)) then else for v112=1,v54 do local v113=1399 -(129 + 1270);local v114;local v115;local v116;local v117;local v118;while true do if (v113==(0 -0)) then v114=0;v115=nil;v113=1;end if (v113~=(222 -(205 + 15))) then else v118=nil;while true do if (v114==0) then v115=0;v116=nil;v114=1434 -(570 + 863);end if (v114~=(4 -3)) then else local v126=0;while true do if (v126==(4 -3)) then v114=1 + 1;break;end if (v126==(0 -0)) then v117=nil;v118=nil;v126=1;end end end if (v114~=2) then else while true do if (v115==0) then v116=0;v117=nil;v115=777 -(98 + 678);end if (v115~=(200 -(88 + 111))) then else v118=nil;while true do if (v116==0) then local v186=0 -0;local v187;while true do if (v186~=0) then else v187=0 -0;while true do if (v187==(0 + 0)) then local v227=0 -0;while true do if (v227~=0) then else v117=v20();v118=nil;v227=790 -(108 + 681);end if (v227==1) then v187=1275 -(39 + 1235);break;end end end if (v187~=1) then else v116=3 -2;break;end end break;end end end if (v116~=(1 + 0)) then else if (v117==(2 -1)) then v118=v20()~=0;elseif (v117==(2 + 0)) then v118=v23();elseif (v117==(1 + 2)) then v118=v24();end v55[v112]=v118;break;end end break;end end break;end end break;end if (v113==(1 + 0)) then v116=nil;v117=nil;v113=2;end end end v53[3]=v20();v100=2 + 0;end if (v100~=(4 -2)) then else v49=1293 -(111 + 1180);break;end if ((1994 -(941 + 1053))~=v100) then else local v110=572 -(514 + 58);local v111;while true do if (v110==0) then v111=0 -0;while true do if (v111==(0 + 0)) then local v122=0 -0;while true do if ((803 -(167 + 635))==v122) then v111=1 + 0;break;end if (v122~=0) then else v54=v22();v55={};v122=1;end end end if (v111~=1) then else v100=1693 -(1329 + 363);break;end end break;end end end end end if (2==v49) then local v101=0;local v102;while true do if (0==v101) then v102=0;while true do local v119=613 -(301 + 312);while true do if (v119==0) then if (v102==0) then local v123=1963 -(1009 + 954);while true do if ((1 -0)==v123) then v102=1;break;end if (v123==(1708 -(1634 + 74))) then local v140=0;while true do if (v140==(2 -1)) then v123=50 -(4 + 45);break;end if (v140==0) then for v189=1 -0,v22() do local v190=0;local v191;local v192;local v193;while true do if (v190==1) then v193=nil;while true do if (v191==(1138 -(601 + 536))) then while true do if ((1919 -(600 + 1319))==v192) then v193=v20();if (v19(v193,1 + 0,1548 -(112 + 1435))==(450 -(210 + 240))) then local v246=0;local v247;local v248;local v249;local v250;while true do if (v246~=(3 -2)) then else v249=nil;v250=nil;v246=2;end if (v246==(0 -0)) then v247=0;v248=nil;v246=1;end if (v246~=(493 -(54 + 437))) then else while true do if (v247==2) then local v255=0 -0;while true do if (v255~=(861 -(353 + 508))) then else if (v19(v249,1,1)~=1) then else v250[2]=v55[v250[2]];end if (v19(v249,2,2)~=(2 -1)) then else v250[3]=v55[v250[9 -6]];end v255=1;end if (v255==(2 -1)) then v247=1 + 2;break;end end end if (v247==1) then local v256=0;while true do if ((2 -1)==v256) then v247=6 -4;break;end if (v256==(913 -(635 + 278))) then v250={v21(),v21(),nil,nil};if (v248==0) then local v261=0;local v262;local v263;while true do if (v261==(1 + 0)) then while true do if (v262==0) then v263=0;while true do if (v263==(0 -0)) then v250[547 -(219 + 325)]=v21();v250[10 -6]=v21();break;end end break;end end break;end if (v261==0) then v262=0;v263=nil;v261=1 + 0;end end elseif (v248==(1 + 0)) then v250[3]=v22();elseif (v248==2) then v250[1 + 2]=v22() -(2^16);elseif (v248~=3) then else local v266=0;while true do if ((0 -0)~=v266) then else v250[35 -(5 + 27)]=v22() -(2^(58 -42));v250[4]=v21();break;end end end v256=1 + 0;end end end if (v247==0) then v248=v19(v193,2,3);v249=v19(v193,4,6);v247=144 -(99 + 44);end if (3==v247) then if (v19(v249,10 -7,1 + 2)~=(1 -0)) then else v250[4]=v55[v250[7 -3]];end v50[v189]=v250;break;end end break;end end end break;end end break;end if ((758 -(757 + 1))==v191) then v192=0 -0;v193=nil;v191=1;end end break;end if (v190==(913 -(92 + 821))) then v191=1131 -(416 + 715);v192=nil;v190=1 -0;end end end for v194=1,v22() do v51[v194-(1 + 0)]=v27();end v140=1724 -(557 + 1166);end end end end end if (v102==(1 -0)) then local v124=0 + 0;local v125;while true do if ((727 -(487 + 240))==v124) then v125=0;while true do if (v125~=0) then else for v196=76 -(45 + 30),v22() do v52[v196]=v22();end return v53;end end break;end end end break;end end end break;end end end v97=1;end end end end end end end break;end if (v48==(2 -1)) then local v72=0;while true do if (0==v72) then v51=nil;v52=nil;v72=1;end if (v72==(1891 -(299 + 1591))) then v48=3 -1;break;end end end if (v48==0) then local v73=0;while true do if (v73==(1 -0)) then v48=1;break;end if (v73==0) then v49=0 + 0;v50=nil;v73=1 + 0;end end end if (v48~=2) then else v53=nil;v54=nil;v48=1001 -(574 + 424);end end end local function v28(v34,v35,v36)local v56=v34[1];local v57=v34[2];local v58=v34[3];return function(...)local v66=0;local v67;local v68;local v69;local v70;local v71;while true do if (v66==3) then A,B=v26(v10(v71));if  not A[1] then local v78=v34[4][v67] or "?";error("Script error at ["   .. v78   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v66==2) then v71=nil;function v71()local v79=v56;local v80=Const;local v81=v57;local v82=v58;local v83=v26;local v84={};local v85={};local v86={};for v90=1240 -(108 + 1132),v70 do if (((1145 -550)<=(5627 -(285 + 426 + 302))) and (v90>=v82)) then v84[v90-v82]=v69[v90 + 1 + 0];else v86[v90]=v69[v90 + (1 -0)];end end local v87=(v70-v82) + (1733 -(1125 + 225 + 382));local v88;local v89;while true do local v91=1216 -((4104 -3106) + 218);local v92;local v93;while true do if ((v91==(1 + 0 + 0)) or ((6930 -(3157 -(331 + 204)))>=(17797 -13215))) then while true do if ((v92==(0 + 0)) or ((508 + 1048)<=(81 + 343))) then v93=695 -(64 + 631);while true do if (((211 + 1790)>=(2052 -(240 + 598))) and (v93==(0 -0))) then local v103=0;local v104;while true do if ((v103==(1309 -(1138 + 171))) or (2570==(907 + 575))) then v104=1225 -(500 + 725);while true do if (((3828 + 1110)>=(1816 -853)) and (v104==(1 + 0 + 0))) then v93=1 + 0;break;end if ((v104==(228 -(57 + 171))) or ((2425 -((913 -(184 + 30)) + 118))==(2594 + 1515))) then local v120=0 -(0 + 0);while true do if (((1503 -1021)<=(20432 -16217)) and (v120==(1 + 0))) then v104=1 -0;break;end if ((v120==(127 -(6 + 121))) or ((3003 -(1031 + 183))<=(663 -((502 -319) + 169)))) then v88=v79[v67];v89=v88[1 + 0];v120=(2638 -(670 + 13)) -(954 + (2064 -(849 + 215)));end end end end break;end end end if (((1306 -(573 + 90))<(2878 -(893 + 616))) and (v93==(1 + 0))) then if ((v89<=(1736 -(1205 + 518))) or ((11059 -8420)>(11356 -8060))) then if ((v89<=(16 -10)) or ((7035 -2945)>=(6333 -(1598 + 56)))) then if ((2961>=(80 + 330)) and (v89<=2)) then if ((v89<=0) or ((5094 -3437)<(125 -71))) then local v127=0 + 0;local v128;while true do if ((v127==(101 -(58 + 43))) or ((963 + (2127 -(747 + 401)))<(1564 -(7 + (2059 -(1589 + 385)))))) then v128=v88[77 -(44 + 31)];v86[v128](v12(v86,v128 + 1 + 0,v68));break;end end elseif (((2369 -(942 + 327))<(10086 -6305)) and (v89>((548 + 23) -(344 + 226)))) then v86[v88[(12 -4) -6]]=v86[v88[1809 -(1002 + 804)]];else v86[v88[1599 -(1529 + 68)]]=v88[3 + (1777 -(672 + 1105))]~=0;end elseif ((v89<=(2 + 2)) or ((278 + 760)>=(4453 -2953))) then if (((112 + 1120)<=(4256 -(19 + 1972))) and (v89==(675 -(224 + 448)))) then v36[v88[(7 -4) + 0]]=v86[v88[675 -(367 + 306)]];else v86[v88[1 + 1]]=v36[v88[1529 -(1197 + 329)]];end elseif (((12366 -8633)>=(3682 -1133)) and (v89>(19 -14))) then local v145=0 -0;local v146;local v147;local v148;local v149;while true do if ((v145==(5 -3)) or ((3704 -(768 + 264))<(2772 -(19 + 105 + 46)))) then while true do if ((v146==(0 -0)) or ((5143 -(416 + 31))<(1978 -1177))) then local v206=0 + 0;while true do if (((9734 -(3406 + 3673))>=(5279 -3160)) and ((1247 -(1109 + 138))==v206)) then v147=v81[v88[7 -4]];v148=nil;v206=1 -0;end if ((v206==(1 + 0)) or ((4923 -(228 + 66))<=(1500 + 1846))) then v146=2 -1;break;end end end if ((3467>=(4129 -(936 + 503))) and ((1779 -(1762 + 16))==v146)) then local v207=212 -(43 + 169);while true do if (((5809 -(109 + 1855))>=401) and (((0 -0) -0)==v207)) then v149={};v148=v9({},{__index=function(v228,v229)local v234=380 -(237 + 143);local v235;local v236;while true do if (((23111 -18190)>(2101 + 2624)) and ((1 + 0)==v234)) then while true do if (((1779 -1019)<(2209 -(131 + 1234))) and (v235==((0 -0) + 0))) then local v253=0 + 0;while true do if ((v253==(0 -0)) or (2224<=(70 + 76))) then v236=v149[v229];return v236[1 + 0][v236[1 + 1]];end end end end break;end if (((3320 -(35 + 7 + 104))==(4791 -(1613 + (405 -(157 + 244))))) and (v234==(0 -0))) then v235=0 + 0 + 0;v236=nil;v234=(688 -(99 + 587)) -1;end end end,__newindex=function(v230,v231,v232)local v237=298 -(95 + 203);local v238;local v239;while true do if (((1990 -1544)<=((8394 -5319) -(130 + 916))) and (v237==((2 + 2) -3))) then while true do if (((688 -(639 + 49))==v238) or (1285>(27 + 4000))) then v239=v149[v231];v239[1 + 0][v239[670 -((1309 -(80 + 1009)) + 448)]]=v232;break;end end break;end if (((9 + 3777)>=(1639 -692)) and (v237==(26 -((571 -(370 + 190)) + 15)))) then v238=0 + 0;v239=nil;v237=294 -(163 + 130);end end end});v207=4 -3;end if ((v207==((2 -1) + 0)) or (1258==(1137 + 712))) then v146=1822 -(1143 + 677);break;end end end if ((v146==(2 + 0)) or (632>(662 + 1339))) then for v213=676 -((400 -253) + 528),v88[4 + 0] do local v214=1818 -(893 + 925);local v215;local v216;while true do if ((v214==(1 -0)) or ((2643 + 1255)<(5076 -(1356 + (899 -545))))) then while true do if ((v215==(1773 -(1344 + 429))) or ((2340 + 328)==(2402 -((2831 -2100) + 904)))) then local v240=0 -0;while true do if ((v240==(0 -0)) or ((2326 -(1185 + 78))==(5367 -1455))) then v67=v67 + 1 + 0;v216=v79[v67];v240=1 + 0 + 0;end if ((((2774 -(26 + 1576)) + 2220)<(5846 -(266 + 1024))) and (v240==(1 + 0))) then v215=1955 -(325 + 1629);break;end end end if ((v215==(2 -1)) or ((6325 -4798)==(683 + 711))) then if ((v216[1 + 0]==(6 -4)) or ((120 + 390)>=(4339 -2531))) then v149[v213-(3 -2)]={v86,v216[1 + 2]};else v149[v213-(1 -0)]={v35,v216[2 + 1]};end v85[ #v85 + (3 -2)]=v149;break;end end break;end if (((2678 + 1056)<(18024 -13141)) and (v214==(0 + 0))) then v215=0 + 0;v216=nil;v214=4 -3;end end end v86[v88[2 + 0]]=v28(v147,v148,v36);break;end end break;end if (((1992 -1400)<(359 + 3761)) and (v145==(1 + 0))) then v148=nil;v149=nil;v145=3 -1;end if (((131 + 970 + 1796)<=(8054 -3209)) and (v145==(0 + 0))) then v146=419 -((611 -312) + 120);v147=nil;v145=1 + 0;end end else v35[v88[664 -(175 + 179 + 307)]]=v86[v88[4 -2]];end elseif ((v89<=(1203 -(860 + (600 -266)))) or ((2790 + 2132)<(114 -(105 -56)))) then if (((2530 + 1111)==(3234 + 407)) and (v89<=(7 + 0))) then local v129=0 -0;local v130;local v131;local v132;while true do if ((v129==(1 + 0)) or ((1782 -(188 + (522 -(37 + 12))))==(4954 -(502 + 166)))) then v132=nil;while true do if ((4380>3139) and (v130==(599 -(344 + 254)))) then v86[v131 + (1870 -(1226 + 643))]=v132;v86[v131]=v132[v88[376 -(19 + 353)]];break;end if ((v130==(1456 -(257 + 1199))) or ((2867 -1142)<((2399 + 283) -(772 + 364)))) then local v200=1900 -(1485 + 415);while true do if (((7493 -4105)<(8685 -5179)) and (v200==1)) then v130=1;break;end if ((1816<=(9577 -5402)) and (v200==(515 -(328 + (599 -412))))) then v131=v88[2];v132=v86[v88[176 -(85 + 88)]];v200=1 + 0;end end end end break;end if (((688 + 2103)<=(5978 -(587 + 512))) and (v129==(0 + 0))) then v130=0 + 0;v131=nil;v129=1 -0;end end elseif ((v89==(21 -13)) or ((14643 -9993)>=(18495 -13678))) then v86[v88[1 + 1]][v88[56 -(51 + 2)]]=v88[4 + 0];else v86[v88[(26 -17) -7]]=v28(v81[v88[1182 -(40 + 1139)]],nil,v36);end elseif (((3257 -(28 + 34))>(1228 -777)) and (v89<=(4 + 2 + 5))) then if (((7036 -3086)>(1810 + 438)) and (v89>(688 -(312 + (1204 -(668 + 170)))))) then local v153=0 + 0;local v154;while true do if ((v153==(1557 -((1710 -821) + 668))) or ((8782 -5395)<(2572 -(421 + 76)))) then v154=v88[2 + 0];v86[v154](v86[v154 + 1 + 0]);break;end end else v86[v88[1595 -(880 + 713)]]=v88[6 -3];end elseif ((v89==(28 -16)) or ((956 + 65)>=3037)) then local v156=0 -0;local v157;local v158;local v159;local v160;while true do if ((v156==(1553 -(1034 + 519))) or ((1442 -(167 + 958))>=(3388 + 198))) then local v184=0 + 0 + 0;while true do if ((v184==(1828 -(1257 + 222 + 349))) or ((1110 + 2163)<=(920 + 453))) then v157=v88[4 -2];v158,v159=v83(v86[v157](v12(v86,v157 + ((584 -(248 + 334)) -(2 -1)),v88[6 -3])));v184=1 -0;end if (((10904 -6503)==(3088 + 1313)) and (v184==(1 + 0))) then v156=1168 -((1610 -1145) + 702);break;end end end if (((272 + (12986 -9816))>=(1620 -(275 + 128))) and (v156==((5 -3) -0))) then for v201=v157,v68 do local v202=0 + 0;local v203;while true do if ((v202==(1286 -(335 + 951))) or ((2606 -(403 + 758))>(1614 + 97))) then v203=414 -(64 + 350);while true do if ((v203==(0 + 0)) or ((1106 + 1187)<(67 + 28))) then v160=v160 + (536 -(90 + 445));v86[v201]=v158[v160];break;end end break;end end end break;end if ((v156==(980 -(283 + 696))) or ((7206 -3386)<=(4308 -(793 + 1097)))) then local v185=1354 -(1068 + 286);while true do if (((2640 + 1099)==(5452 -(346 + 239 + 1128))) and (v185==(2 -1))) then v156=(2505 -(54 + 478)) -((1341 -819) + 1449);break;end if (((2745 + 50)<=(5231 -(192 + 82 + 6))) and (v185==((1636 -(211 + 1425)) + (0 -0)))) then v68=(v159 + v157) -(1 -(0 -0));v160=0 + 0;v185=529 -(361 + 167);end end end end else v86[v88[7 -5]]=v86[v88[3 + 0]][v86[v88[(676 + 362) -(268 + 766)]]];end elseif ((v89<=(40 -20)) or ((2616 + 520)==(4795 -(381 + 970)))) then if ((v89<=(935 -(829 + 90))) or ((1771 -1153)==(13753 -10895))) then if ((v89<=(38 -24)) or (((9131 -(659 + 360)) -6106)>(689 + 2002))) then local v133=0 -(0 + 0);local v134;local v135;local v136;local v137;local v138;local v139;while true do if (((0 -0)==v133) or ((4218 + 209)<(1630 + 1721))) then v134=0 -0;v135=nil;v133=(600 -(87 + 512)) + 0;end if (((1361 + 1631)<(2612 + 2379)) and ((7 -4)==v133)) then while true do if ((v134==(1842 -(1319 + 523))) or ((1594 + 235)==(14064 -9443))) then local v204=0 -0;while true do if ((v204==(112 -(98 + 14))) or (4267<(9607 -5681))) then v135=0 + 0;v136=nil;v204=1262 -(642 + 619);end if (((5033 -(59 + 986))>=(2693 -1972)) and (v204==(225 -(169 + 55)))) then v134=1992 -(1059 + 92 + 840);break;end end end if ((v134==(1 + 0)) or ((6194 -(91 + 1538))==(1899 + 597))) then local v205=1301 -(825 + 476);while true do if (((590 -(258 + 331))==v205) or ((340 + 1269)>(4134 -1088))) then v134=5 -3;break;end if (((2878 -(7 + (3830 -2675)))>(1353 -((1684 -782) + 264))) and (v205==(0 + 0))) then v137=nil;v138=nil;v205=1;end end end if (((11714 -7536)<=(2726 + 1608)) and (v134==(1438 -(612 + 824)))) then v139=nil;while true do if (((0 -0)==v135) or ((1 + 0)>2194)) then local v217=0;local v218;while true do if (((7386 -3650)==(2835 + 901)) and (v217==((0 -0) + 0))) then v218=0 + 0;while true do if ((v218==(1 -0)) or ((1020 -386)>=(558 + 3072))) then v135=1 + 0;break;end if ((v218==(0 -0)) or (((5105 -(1036 + 782)) -1631)<(2422 -1598))) then local v242=0 -0;while true do if (((79 + 929)<(4991 -2011)) and (v242==(1 + 0))) then v218=406 -(370 + 35);break;end if ((v242==(0 + 0)) or ((7500 -5302)>(4392 -925))) then v136=v88[7 -5];v137,v138=v83(v86[v136](v86[v136 + (89 -(47 + 11 + 30))]));v242=1673 -(1033 + 639);end end end end break;end end end if ((v135==(1269 -(614 + 653))) or ((4695 -(642 + 1185))<(353 + 967))) then for v221=v136,v68 do local v222=0 -0;local v223;while true do if ((v222==(1501 -(1499 + 2))) or ((5232 -(762 + 951))>=(2345 + 1645))) then v223=0 + 0;while true do if (((1000 -(48 + 952))==v223) or ((441 + 606)>=(3822 -(28 + 174)))) then v139=v139 + 1 + 0;v86[v221]=v137[v139];break;end end break;end end end break;end if ((v135==((740 + 297) -(125 + 618 + 293))) or ((3071 -(327 + (4397 -3335)))>(3354 -(289 + 1303)))) then local v219=325 -(263 + 62);local v220;while true do if ((v219==((0 -0) + 0)) or ((4220 -2776)>=(2582 + 943))) then v220=864 -(404 + 460);while true do if (((6840 -(606 + 1287))==4947) and (v220==(1713 -(1669 + 43)))) then v135=18 -((394 -(42 + 342)) + 6);break;end if ((v220==(0 -0)) or ((16553 -12137)<(2645 -(773 + (83 -58))))) then local v243=0 -0;while true do if ((v243==(2 -(488 -(311 + 176)))) or ((1775 + 1553)<(1811 + 659))) then v220=1 + 0;break;end if ((v243==(1397 -(403 + (2182 -(193 + 995))))) or ((6341 -3953)==(7267 -4230))) then v68=(v138 + v136) -(1 + 0);v139=(0 + 0) -(0 + 0);v243=1 + 0;end end end end break;end end end end break;end end break;end if (((2706 -1675)<(3826 -(130 + 998))) and (v133==(1203 -(430 + 772)))) then v136=nil;v137=nil;v133=1481 -(107 + 1372);end if ((v133==(1 + 1)) or ((12728 -(8568 + 1403))>(4935 -(520 + 1476)))) then v138=nil;v139=nil;v133=3 + 0;end end elseif (((1901 -1516)>=(9 + 84)) and (v89==((1475 -(1153 + 315)) + 8))) then if ((v86[v88[(1 -0) + 1]]==v88[202 -(173 + 25)]) or (1620==(545 + 3322))) then v67=v67 + (947 -(512 + 434));else v67=v88[1892 -(118 + 1771)];end else local v162=297 -(237 + 53 + 7);local v163;local v164;while true do if ((((1544 -(1055 + 275)) + 181)<(7678 -3947)) and (v162==(0 + 0))) then v163=0 + 0;v164=nil;v162=1822 -((2140 -(124 + 257)) + 62);end if ((v162==(1 + 0)) or ((1492 -668)==(4340 -(364 + 1505)))) then while true do if ((v163==(0 -0)) or ((497 + 302)<=((284 + 1545) -(977 + 92)))) then v164=v88[(2065 -(293 + 1138)) -((618 -(20 + 29)) + 63)];v86[v164]=v86[v164](v12(v86,v164 + 1 + 0,v88[1750 -(634 + 1113)]));break;end end break;end end end elseif ((((6717 + 4950) -8130)==(4715 -(795 + 383))) and (v89<=(52 -(73 -39)))) then if (((21868 -16993)>=(749 + 2066)) and (v89==(37 -20))) then v86[v88[3 -1]]=v35[v88[3]];elseif ((v88[3 -1]==v86[v88[4]]) or ((5469 -1611)<=(2684 + 987))) then v67=v67 + (1 -0);else v67=v88[1 + 2];end elseif ((v89==(17 + (3 -1))) or ((962 + 353 + 1991)<=(1934 -(1051 + 775)))) then do return;end else local v166=1765 -((3539 -1995) + 221);local v167;local v168;local v169;while true do if ((((2325 -(819 + 41)) -473)<(5618 -(740 + 859))) and (v166==((0 -0) + 0))) then v167=0 + 0;v168=nil;v166=1;end if (((11500 -8125)>=(1205 + 1417)) and (v166==(15 -(6 + 8)))) then v169=nil;while true do if ((v167==(1981 -(52 + 1928))) or ((11475 -7628)<(2991 -2084))) then while true do if (((5668 -2632)>(55 + 90)) and (v168==(0 -0))) then v169=v88[5 -(5 -2)];v86[v169](v12(v86,v169 + (2 -1),v88[3]));break;end end break;end if ((v167==(0 + 0)) or ((3379 -1656)<((362 + 386) -(1954 -(1155 + 385))))) then local v210=0 -0;while true do if ((v210==(1565 -(1248 + 317))) or ((813 -413)>=(257 + 4181))) then v168=952 -(564 + 388);v169=nil;v210=1671 -(1586 + 84);end if ((((7004 -(72 + 1515)) -(63 + 113 + 283))>=(1229 -(487 + 30))) and (v210==((1591 -(314 + 1274)) -2))) then v167=1 + 0;break;end end end end break;end end end elseif (((71 + (5723 -(256 + 1115)))>=(1910 + (3083 -2002))) and (v89<=(1261 -(997 + 240)))) then if ((v89<=(5 + 17)) or ((3843 -(948 + 319))>(10638 -6271))) then if (((1282 + 495)<(2342 + 1321)) and (v89==(56 -35))) then local v170=1115 -(20 + 13 + 1082);local v171;local v172;while true do if (((4560 -(594 + (523 -183)))>=(3120 + (1186 -728))) and (v170==((1404 -(802 + 600)) -1))) then while true do if ((v171==(0 -0)) or ((2916 + 2060)<(8280 -5797))) then v172=v88[1606 -(717 + 887)];v86[v172]=v86[v172](v12(v86,v172 + 1 + 0,v68));break;end end break;end if ((v170==(1426 -(1010 + 416))) or ((8341 -4565)<(4391 -(550 + 322)))) then v171=1891 -(584 + 1307);v172=nil;v170=1593 -(358 + 1234);end end else for v182=v88[5 -3],v88[805 -((879 -315) + 238)] do v86[v182]=nil;end end elseif (((2269 + 1542)==(1716 + 2095)) and (v89==(32 -9))) then v86[v88[1 + 1]]();else v86[v88[1352 -(194 + 1156)]][v88[13 -(10 + 0)]]=v86[v88[7 -3]];end elseif (((3190 -(1837 + 212))<(496 + 1004)) and (v89<=(84 -58))) then if (((595 -151)==(407 + 37)) and (v89==(1892 -(699 + (2616 -1448))))) then local v174=0 -0;local v175;local v176;local v177;while true do if ((v174==(1 + 0)) or ((143 + 1838)<(2182 -(621 + 5)))) then v177=nil;while true do if ((v175==(0 -0)) or (4013<((6104 -(1482 + 437)) -(252 + (1620 -(307 + 68)))))) then local v212=1400 -(590 + 810);while true do if ((855>=(2023 -(650 + 1043))) and (v212==(0 -0))) then v176=(0 -0) + (155 -(80 + 75));v177=nil;v212=(1 -0) -0;end if ((v212==(2 -1)) or ((4292 -(7953 -5033))<=(1540 -1082))) then v175=1 + 0;break;end end end if (((8549 -6442)<(5183 -(1495 + 262))) and (v175==(1 + 0))) then while true do if ((v176==(0 -0)) or ((5454 -(537 + 47 + 1024))>=((13195 -6609) -(836 + 989)))) then v177=v88[1565 -(780 + (1505 -(75 + 647)))];v86[v177]=v86[v177]();break;end end break;end end break;end if (((4433 -3205)==(2786 -1558)) and (v174==(0 + 0))) then v175=1749 -(366 + 1383);v176=nil;v174=1 + 0;end end else v67=v88[547 -(386 + 36 + 122)];end elseif ((v89>(3 + 24)) or ((2049 -647)>=((6695 + 2892) -7170))) then v86[v88[795 -(267 + 526)]]=v86[v88[2 + 1]][v88[(7 + 1) -4]];else local v179=872 -(731 + 141);local v180;local v181;while true do if ((v179==0) or ((2390 + 413)==(19007 -14084))) then v180=0 -0;v181=nil;v179=1206 -(132 + 1073);end if ((v179==1) or ((934 + 3271)>=(1429 + 3054))) then while true do if (((2349 -1808)<=(409 + 1209)) and (v180==0)) then v181=v86[v88[4]];if ( not v181 or ((821 + 2804)<(9665 -6863))) then InstrPoint=InstrPoint + ((133 + 434) -(90 + 476));else local v224=(0 -0) + 0;local v225;while true do if (((3198 -(517 + 588))>((1172 -306) + 22)) and (v224==((2142 -(923 + 887)) -(95 + 237)))) then v225=1556 -(1232 + 324);while true do if (((358 -100)<(3598 -1756)) and (v225==(0 + 0 + 0))) then v86[v88[2 + 0]]=v181;InstrPoint=v88[982 -(538 + 441)];break;end end break;end end end break;end end break;end end end v67=v67 + (3 -2);break;end end break;end end break;end if (((3417 -(694 + (2223 -939)))<=(475 + 2482)) and ((1724 -(1695 + 29))==v91)) then v92=0 + 0;v93=nil;v91=1 + 0;end end end end v66=3;end if (v66==1) then v69={...};v70=v11("#",...) -1;v66=2;end if (v66==0) then v67=1;v68= -1;v66=1;end end end;end return v28(v27(),{},v16)();end vv8());end
